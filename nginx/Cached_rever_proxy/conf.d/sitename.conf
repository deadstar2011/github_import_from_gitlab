server {
    listen 80;
    server_name sitename.domen www.sitename.domen;
        access_log off;
        location / {
            rewrite ^ https://sitename.domen$request_uri? permanent;
        }
}


server {
    listen 443 ssl http2;
    server_name www.sitename.domen;

    ssl_session_cache shared:SSL:5m;
    ssl_session_timeout 15m;
    ssl_protocols TLSv1.2 TLSv1.3 ;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SH256:DHE-RSA-AES256-GCM-SHA384;

    ssl_prefer_server_ciphers On;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_certificate             /etc/nginx/ssl/sitename.crt;
    ssl_certificate_key         /etc/nginx/ssl/sitename.key;
    ssl_trusted_certificate     /etc/nginx/ssl/ca-root.crt;
    ssl_dhparam  /etc/nginx/ssl/dhparam.pem;
        location / {
            rewrite ^ https://sitename.domen$request_uri? permanent;
        }
}
server {
    listen 443 ssl http2;
    server_name sitename.domen;
    index index.php;
    root /usr/share/nginx/html;
    client_max_body_size 1G;
    client_body_buffer_size 4M;

    charset utf-8;
    access_log /var/log/nginx/app_nginx_access.log;
    error_log /var/log/nginx/app_nginx_error.log;

    ssl_session_cache shared:SSL:5m;
    ssl_session_timeout 15m;
    ssl_protocols TLSv1.2 TLSv1.3 ;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    ssl_prefer_server_ciphers On;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_certificate             /etc/nginx/ssl/sitename.crt;
    ssl_certificate_key         /etc/nginx/ssl/sitename.key;
    ssl_trusted_certificate     /etc/nginx/ssl/ca-root.crt;
    ssl_dhparam  /etc/nginx/ssl/dhparam.pem;

    add_header Strict-Transport-Security "max-age=31536000;";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy "origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self' ; connect-src ; frame-src ; script-src https: 'unsafe-eval' 'unsafe-inline'; style-src blob: https: 'unsafe-inline'; img-src 'self' blob: https: data:; font-src https: data:;";

#Кэшируем все кроме того что в этих условиях
    set $do_cache 0;
    if ($request_uri ~* "/api/v1/(URI)") {
        set $do_cache 1;
    }

    if ($request_uri ~* "/URI/*") {
        set $do_cache 1;
    }

    proxy_buffering        on;
    proxy_cache            STATIC;
    proxy_cache_valid      4h;
    proxy_cache_methods GET HEAD;
    proxy_cache_bypass $do_cache;
    proxy_no_cache $do_cache;
    proxy_cache_background_update on;
    proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_404 http_403;
    proxy_cache_min_uses 1;
    proxy_cache_lock on;

    location  / {
        proxy_pass         http://IP;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header X-Cache-Status $upstream_cache_status;
        proxy_ignore_headers Expires Cache-Control;
    }

    location ~ ^/(URI|URI)/ {
    proxy_pass         http://IP;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    add_header X-Cache-Status $upstream_cache_status;
    proxy_ignore_headers Expires Cache-Control;
     }


}
